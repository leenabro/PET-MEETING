-- 사용자 테이블
CREATE TABLE MEMBER (
    M_CODE NUMBER,
    M_ID VARCHAR2(20) CONSTRAINT M_ID_NN NOT NULL,
    M_PWD VARCHAR2(150) CONSTRAINT M_PWD_NN NOT NULL,
    M_NAME VARCHAR2(100) CONSTRAINT M_NAME_NN NOT NULL,
    M_NICKNAME VARCHAR2(100) CONSTRAINT M_NICKNAME_NN NOT NULL,
    M_PHONE varchar2(12) CONSTRAINT M_PHONE_NN NOT NULL,
    M_ADDRESS VARCHAR2(150) CONSTRAINT M_ADDRESS_NN NOT NULL,
    M_EMAIL VARCHAR2(150) CONSTRAINT M_EMAIL_NN NOT NULL,
    M_BIRTH DATE CONSTRAINT M_BIRTH_NN NOT NULL,
    M_SU_DATE DATE  DEFAULT SYSDATE CONSTRAINT M_REG_DATE_NN NOT NULL,
    M_GENDER VARCHAR2(1) CONSTRAINT M_GENDER_NN NOT NULL CONSTRAINT M_GENDER_CK CHECK(M_GENDER IN ('M','F')),
    M_STATUS VARCHAR2(1) DEFAULT 'Y' CONSTRAINT M_STATUS_NN NOT NULL CONSTRAINT M_STATUS_CK CHECK(M_STATUS IN ('Y','N')), 
    CONSTRAINT "M_PK" PRIMARY KEY ("M_CODE"),
    CONSTRAINT "M_ID_UQ" UNIQUE ("M_ID"),
    CONSTRAINT "M_NICKNAME_UQ" UNIQUE ("M_NICKNAME"),
    CONSTRAINT "M_EMAIL_UQ" UNIQUE ("M_EMAIL")
);

COMMENT ON COLUMN MEMBER.M_CODE IS '회원코드'; 
COMMENT ON COLUMN MEMBER.M_ID IS '아이디'; 
COMMENT ON COLUMN MEMBER.M_PWD IS '비밀번호'; 
COMMENT ON COLUMN MEMBER.M_NAME IS '이름'; 
COMMENT ON COLUMN MEMBER.M_NICKNAME IS '닉네임'; 
COMMENT ON COLUMN MEMBER.M_PHONE IS '핸드폰번호'; 
COMMENT ON COLUMN MEMBER.M_BIRTH IS '생년월일'; 
COMMENT ON COLUMN MEMBER.M_ADDRESS IS '주소'; 
COMMENT ON COLUMN MEMBER.M_EMAIL IS '이메일'; 
COMMENT ON COLUMN MEMBER.M_SU_DATE IS '가입일'; 
COMMENT ON COLUMN MEMBER.M_GENDER IS '성별'; 
COMMENT ON COLUMN MEMBER.M_STATUS IS '회원상태';

CREATE SEQUENCE M_CODE_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1 
MAXVALUE 99999999999999
NOCYCLE
NOCACHE;

DROP SEQUENCE M_CODE_SEQ;

DROP TABLE MEMBER;

UPDATE MEMBER SET M_NICKNAME='이나브로', M_PHONE='01012345678', M_ADDRESS='서울 송파구' WHERE M_CODE=2;

-- 강아지 테이블
CREATE TABLE DOG (
	D_ID VARCHAR2(50),
	D_ORI_IMG VARCHAR2(500),
    D_RE_IMG VARCHAR2(500),
    D_NUM NUMBER,
	D_NAME VARCHAR2(100) NOT NULL,
	D_KIND VARCHAR2(100) NOT NULL,
	D_SIZE VARCHAR2(10) NOT NULL,
	D_GENDER VARCHAR(10) NOT NULL,
	NEUTERED CHAR(1) NOT NULL,
	VACCINE	VARCHAR2(1000) NOT NULL,
	M_CODE NUMBER NOT NULL,
    CONSTRAINT DOG_INFO_ID_PK PRIMARY KEY(D_ID),
    CONSTRAINT MEMBER_M_CODE_FK FOREIGN KEY (M_CODE) REFERENCES MEMBER
);

COMMENT ON COLUMN DOG.D_ID IS '아이디';
COMMENT ON COLUMN DOG.D_ORI_IMG IS '원래 사진 이름';
COMMENT ON COLUMN DOG.D_RE_IMG IS '새로운 사진 이름';
COMMENT ON COLUMN DOG.D_NUM IS '번호';
COMMENT ON COLUMN DOG.D_NAME IS '이름';
COMMENT ON COLUMN DOG.D_KIND IS '견종';
COMMENT ON COLUMN DOG.D_SIZE IS '크기';
COMMENT ON COLUMN DOG.D_GENDER IS '성별';
COMMENT ON COLUMN DOG.NEUTERED IS '중성화';
COMMENT ON COLUMN DOG.VACCINE IS '백신접종';

CREATE SEQUENCE D_ID;

DROP TABLE DOG;

DROP SEQUENCE D_ID;

INSERT INTO DOG (
    D_ID,
    D_ORI_IMG,
    D_RE_IMG,
    D_NUM,
    D_NAME,
    D_KIND,
    D_SIZE,
    D_GENDER,
    NEUTERED,
    VACCINE,
    MEM_CODE
) VALUES(
    'DOG' || DOG_ID.NEXTVAL,
    'NULL',
    'NULL',
    1,
    '보리',
    '미니어쳐 핀셔',
    '소형견',
    'F',
    'N',
    '접종안함',
    '1'
);

INSERT INTO DOG (
    D_ID,
    D_ORI_IMG,
    D_RE_IMG,
    D_NUM,
    D_NAME,
    D_KIND,
    D_SIZE,
    D_GENDER,
    NEUTERED,
    VACCINE,
    MEM_CODE
) VALUES(
    'DOG' || DOG_ID.NEXTVAL,
    'NULL',
    'NULL',
    2,
    '수리',
    '닥스훈트',
    '소형견',
    'M',
    'N',
    '신종플루',
    '1'
);

SELECT D_NUM, D_ORI_IMG, D_RE_IMG, D_NAME, D_KIND, D_SIZE, D_GENDER, NEUTERED, VACCINE, M_CODE
FROM DOG_INFO
WHERE M_CODE = 1;

COMMIT;

SELECT COUNT(D_NUM)
FROM DOG
WHERE M_CODE = 1;



ROLLBACK;

SELECT * FROM DOG WHERE M_CODE=2;

-- 관리자 테이블
CREATE TABLE ADMIN (
	A_ID VARCHAR2(20) NOT NULL,
	A_PWD VARCHAR2(500) NOT NULL,
    A_ROLE VARCHAR2(10) NOT NULL, 
	CONSTRAINT ADMIN_A_ID_UQ UNIQUE(A_ID)
);

COMMENT ON COLUMN ADMIN.A_ID IS '관리자 아이디'; 
COMMENT ON COLUMN ADMIN.A_PWD IS '관리자 비밀번호'; 
COMMENT ON COLUMN ADMIN.A_ROLE IS '관리자 역할'; 

INSERT INTO ADMIN VALUES('admin', 'asdf', 'master');

COMMIT;

DROP TABLE ADMIN;

SELECT * FROM ADMIN WHERE A_ID='admin';


-- 게시판 코드 테이블
CREATE TABLE BOARD_CODE (
    BC_CODE   VARCHAR2(40) NOT NULL,
    BC_NAME   VARCHAR2(100)  NOT NULL,
    BC_AUTHORITY VARCHAR2(1) NOT NULL,
    CONSTRAINT BOARD_CODE_BC_CODE_PK PRIMARY KEY(BC_CODE),
    CONSTRAINT BOARD_CODE_BC_AUTHORITY_CK CHECK(BC_AUTHORITY IN('A','M'))
);

INSERT INTO BOARD_CODE VALUES('B1', '펫 다이어리', 'M');
INSERT INTO BOARD_CODE VALUES('B2', '펫미팅 후기', 'M');
INSERT INTO BOARD_CODE VALUES('B3', '정보공유', 'M');
INSERT INTO BOARD_CODE VALUES('B4', '문의/건의', 'M');
INSERT INTO BOARD_CODE VALUES('B5', '공지사항', 'A');
INSERT INTO BOARD_CODE VALUES('B6', '신고하기', 'M');

-- Board 테이블
CREATE TABLE BOARD (
    B_NO   NUMBER   NOT NULL,
    B_CODE   VARCHAR2(40) NOT NULL,
    B_NUMBER   NUMBER   NOT NULL,
    B_TITLE   VARCHAR2(40) NOT NULL,
    M_CODE   NUMBER   NOT NULL,
    B_CONTENT   VARCHAR2(2000) NOT NULL,
    S_ID   VARCHAR2(20) ,
    CREATE_DATE   DATE DEFAULT SYSDATE NOT NULL,
    MODIFY_DATE DATE DEFAULT SYSDATE,
    B_VIEWS   NUMBER DEFAULT 0  NOT NULL,
    B_STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
    ORIGINAL_FILENAME VARCHAR2(500),
    RENAMED_FILENAME VARCHAR2(500),
    CONSTRAINT BOARD_B_NO_ID_PK PRIMARY KEY(B_NO),
    CONSTRAINT BOARD_B_STATUS_CK CHECK(B_STATUS IN('Y','N')),
    CONSTRAINT BOARD_M_CODE_FK FOREIGN KEY(M_CODE) REFERENCES MEMBER(M_CODE),
    CONSTRAINT BOARD_B_CODE_FK FOREIGN KEY(B_CODE) REFERENCES BOARD_CODE(BC_CODE)
);

CREATE SEQUENCE SEQ_BOARD_NO;

CREATE SEQUENCE SEQ_NOTICE_NO;
CREATE SEQUENCE SEQ_QNA_NO;
CREATE SEQUENCE SEQ_INFO_NO;
CREATE SEQUENCE SEQ_INTRODUCE_NO;
CREATE SEQUENCE SEQ_REVIEW_NO;
CREATE SEQUENCE SEQ_REPORT_NO;

-- 댓글 테이블
CREATE TABLE REPLY (
    R_NO   NUMBER NOT NULL,
    B_NO   NUMBER  NOT NULL,
    M_CODE   NUMBER NOT NULL,
    R_CONTENT   VARCHAR2(1000) NOT NULL,
    CREATE_DATE   DATE   DEFAULT SYSDATE NOT NULL,
    MODIFY_DATE DATE DEFAULT SYSDATE,
    R_STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL,
    CONSTRAINT REPLY_R_NO_PK PRIMARY KEY(R_NO),
    CONSTRAINT REPLY_R_STATUS_CK CHECK(R_STATUS IN('Y','N')),
    CONSTRAINT BOARD_M_CODE_FK2 FOREIGN KEY(M_CODE) REFERENCES MEMBER(M_CODE)
);

CREATE SEQUENCE SEQ_REPLY_NO;




DROP TABLE BOARD_CODE;

DROP SEQUENCE SEQ_BOARD_NO;

DROP SEQUENCE SEQ_NOTICE_NO;
DROP SEQUENCE SEQ_QNA_NO;
DROP SEQUENCE SEQ_INFO_NO;
DROP SEQUENCE SEQ_INTRODUCE_NO;
DROP SEQUENCE SEQ_REVIEW_NO;
DROP SEQUENCE SEQ_REPORT_NO;

DROP SEQUENCE SEQ_REPLY_NO;

-- BOARD 데이터 삽입
BEGIN
    FOR N IN 1..10
    LOOP INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL, 'B1', SEQ_INTRODUCE_NO.NEXTVAL,
'우리아이는요~'|| SEQ_INTRODUCE_NO.CURRVAL, 1, '예뻐요'|| SEQ_INTRODUCE_NO.CURRVAL, NULL, SYSDATE, SYSDATE, DEFAULT, 'Y', NULL, NULL);
END LOOP;

COMMIT;

EXCEPTION
    WHEN OTHERS THEN ROLLBACK;
END;
/

-- WALKBOARD 테이블
CREATE TABLE WALKBOARD (
	WB_NO NUMBER NOT NULL,
	M_CODE NUMBER NOT NULL,
	D_ID VARCHAR2(50) NOT NULL,
	WB_TITLE VARCHAR2(40) NOT NULL,
	WB_CONTENT VARCHAR2(2000) NOT NULL,
	CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
	MODIFY_DATE DATE DEFAULT SYSDATE NOT NULL,
	WB_VIEWS NUMBER NOT NULL,
	WB_STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
	ORIGINAL_FILENAME VARCHAR2(500) NULL,
	RENAMED_FILENAME VARCHAR2(500) NULL,
    CONSTRAINT WALKBOARD_WB_NO_PK PRIMARY KEY(WB_NO),
    CONSTRAINT WALKBOARD_M_CODE_FK FOREIGN KEY(M_CODE) REFERENCES MEMBER(M_CODE),
    CONSTRAINT WALKBOARD_D_ID_FK FOREIGN KEY(D_ID) REFERENCES DOG(D_ID),
    CONSTRAINT WALKBOARD_WB_STATUS_CK CHECK(WB_STATUS IN ('Y', 'N'))
);

COMMENT ON COLUMN WALKBOARD.WB_NO IS '산책 게시글 번호';
COMMENT ON COLUMN WALKBOARD.M_CODE IS '회원코드';
COMMENT ON COLUMN WALKBOARD.D_ID IS '강아지 아이디';
COMMENT ON COLUMN WALKBOARD.WB_TITLE IS '제목';
COMMENT ON COLUMN WALKBOARD.WB_CONTENT IS '내용';
COMMENT ON COLUMN WALKBOARD.CREATE_DATE IS '등록날짜';
COMMENT ON COLUMN WALKBOARD.MODIFY_DATE IS '수정날짜';
COMMENT ON COLUMN WALKBOARD.WB_VIEWS IS '조회수';
COMMENT ON COLUMN WALKBOARD.WB_STATUS IS '상태값';
COMMENT ON COLUMN WALKBOARD.ORIGINAL_FILENAME IS '파일명';
COMMENT ON COLUMN WALKBOARD.RENAMED_FILENAME IS '재설정된 파일명';

CREATE SEQUENCE WB_NO_SEQ;

DROP TABLE WALKBOARD;

DROP SEQUENCE WB_NO_SEQ;

-- WALKREPLY 테이블
CREATE TABLE WALKREPLY (
	WR_NO NUMBER NOT NULL,
	WB_NO NUMBER NOT NULL,
	M_CODE NUMBER NOT NULL,
	WR_CONTENT VARCHAR2(1000) NOT NULL,
	CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
	MODIFY_DATE DATE DEFAULT SYSDATE NOT NULL,
	WR_STATUS CHAR(1) DEFAULT 'Y' NOT NULL,
    CONSTRAINT WALKREPLY_WR_NO_PK PRIMARY KEY(WR_NO),
    CONSTRAINT WALKREPLY_WB_NO_FK FOREIGN KEY(WB_NO) REFERENCES WALKBOARD(WB_NO),
    CONSTRAINT WALKREPLY_M_CODE_FK FOREIGN KEY(M_CODE) REFERENCES MEMBER(M_CODE),
    CONSTRAINT WALKREPLY_WR_STATUS_CK CHECK(WR_STATUS IN ('Y', 'N'))
);

COMMENT ON COLUMN WALKREPLY.WR_NO IS '산책 게시글 댓글 번호';
COMMENT ON COLUMN WALKREPLY.WB_NO IS '산책 게시글 번호';
COMMENT ON COLUMN WALKREPLY.M_CODE IS '회원코드';
COMMENT ON COLUMN WALKREPLY.WR_CONTENT IS '내용';
COMMENT ON COLUMN WALKREPLY.CREATE_DATE IS '등록날짜';
COMMENT ON COLUMN WALKREPLY.MODIFY_DATE IS '수정날짜';
COMMENT ON COLUMN WALKREPLY.WR_STATUS IS '상태값';

CREATE SEQUENCE WR_NO_SEQ;

DROP TABLE WALKREPLY;

DROP SEQUENCE WR_NO_SEQ;


COMMIT;

SELECT B_NO
FROM BOARD

UNION ALL

SELECT WB_NO
FROM WALKBOARD;

-- 전체 게시판 수 세기
SELECT COUNT(*)
FROM (
    SELECT B_NO
    FROM BOARD
    
    UNION ALL
    
    SELECT WB_NO
    FROM WALKBOARD
    );
    
-- 오늘 생성한 게시판 수 세기
SELECT COUNT(*)
FROM (
    SELECT B_NO
    FROM BOARD
    WHERE TO_CHAR(CREATE_DATE, 'YYYYMMDD') = TO_CHAR( SYSDATE, 'YYYYMMDD')
    
    UNION ALL
    
    SELECT WB_NO
    FROM WALKBOARD
    WHERE TO_CHAR(CREATE_DATE, 'YYYYMMDD') = TO_CHAR( SYSDATE, 'YYYYMMDD')
    );
    
SELECT COUNT(*)
FROM MEMBER;
    
SELECT RNUM, B_NO, B_TITLE, B_CONTENT, M_NICKNAME
FROM(
    SELECT ROWNUM AS RNUM, B_NO, B_TITLE, B_CONTENT, M_NICKNAME
    FROM(
        SELECT B_NO, B_TITLE,B_CONTENT, M_NICKNAME
        FROM BOARD B
        JOIN MEMBER M ON (B.M_CODE = M.M_CODE)
        WHERE B_STATUS = 'Y'
        ORDER BY B_NO DESC)
)
WHERE RNUM BETWEEN 1 AND 3;

-- 산책게시판 데이터 입력
INSERT INTO WALKBOARD VALUES (WB_NO_SEQ.NEXTVAL, 4, 'DOG3', '산책 친구 구합니다', '산책 친구 구합니다', SYSDATE, SYSDATE, 0, 'Y', NULL, NULL);

-- 산책게시판 댓글 입력
INSERT INTO "WALKREPLY" VALUES (WR_NO_SEQ.NEXTVAL, 11, 4, '저랑 산책 하실래요?', SYSDATE, SYSDATE, 'Y');

BEGIN
    FOR N IN 1..15
    LOOP INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL, 'B1', SEQ_INTRODUCE_NO.NEXTVAL,
'우리아이는요~'|| SEQ_INTRODUCE_NO.CURRVAL, 4, '예뻐요'|| SEQ_INTRODUCE_NO.CURRVAL, NULL, SYSDATE, SYSDATE, DEFAULT, 'Y', NULL, NULL);
END LOOP;

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN ROLLBACK;
END;
/

BEGIN
    FOR N IN 1..15
    LOOP INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL, 'B2', SEQ_REVIEW_NO.NEXTVAL,
'리뷰작성완료~'|| SEQ_REVIEW_NO.CURRVAL, 4, '다음에도 만나자 이슬모니~'|| SEQ_REVIEW_NO.CURRVAL, 'asasr56', SYSDATE, SYSDATE, DEFAULT, 'Y', NULL, NULL);
END LOOP;

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN ROLLBACK;
END;
/

BEGIN
    FOR N IN 1..15
    LOOP INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL, 'B3', SEQ_INFO_NO.NEXTVAL,
'동물병원 추천'|| SEQ_INFO_NO.CURRVAL, 4, '역삼역 ㅁㅁ동물병원 넘 좋아요 믿고가보세요'|| SEQ_INFO_NO.CURRVAL, NULL, SYSDATE, SYSDATE, DEFAULT, 'Y', NULL, NULL);
END LOOP;

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN ROLLBACK;
END;
/

BEGIN
    FOR N IN 1..10
    LOOP INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL, 'B4', SEQ_QNA_NO.NEXTVAL,
'산책공원추천더해주실수있나요?'|| SEQ_QNA_NO.CURRVAL, 4, '좀더 다양한 공원추천을 받고싶어요'|| SEQ_QNA_NO.CURRVAL, NULL, SYSDATE, SYSDATE, DEFAULT, 'Y', NULL, NULL);
END LOOP;

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN ROLLBACK;
END;
/

BEGIN
    FOR N IN 1..10
    LOOP INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL, 'B5', SEQ_NOTICE_NO.NEXTVAL,
'공지사항'|| SEQ_NOTICE_NO.CURRVAL, 4, '이번 시즌 강아지장터 공지'|| SEQ_NOTICE_NO.CURRVAL, NULL, SYSDATE, SYSDATE, DEFAULT,'Y', NULL, NULL);
END LOOP;

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN ROLLBACK;
END;
/

BEGIN
    FOR N IN 1..10
    LOOP INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL, 'B6', SEQ_REPORT_NO.NEXTVAL,
'신고합니다!'|| SEQ_REPORT_NO.CURRVAL, 4, '왜 뒤처리 안하시나요.;'|| SEQ_REPORT_NO.CURRVAL, 'erdjhj88', SYSDATE, SYSDATE, DEFAULT, 'Y', NULL, NULL);
END LOOP;

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN ROLLBACK;
END;
/

COMMIT;

SELECT RNUM, B_NO, B_TITLE, B_CONTENT, M_NICKNAME
FROM (
        SELECT ROWNUM AS RNUM, B_NO, B_TITLE, B_CONTENT, M_NICKNAME
        FROM (
                SELECT B_NO, B_TITLE, B_CONTENT, M_NICKNAME
                FROM BOARD B
                JOIN MEMBER M ON (B.M_CODE = M.M_CODE)
                ORDER BY B_NO DESC)
    )
WHERE RNUM BETWEEN 1 AND 3;

SELECT RNUM, WB_NO, WB_TITLE, WB_CONTENT, WB_STATUS, M_NICKNAME
FROM (
        SELECT ROWNUM AS RNUM, WB_NO, WB_TITLE, WB_CONTENT, WB_STATUS, M_NICKNAME
        FROM (
                SELECT WB_NO, WB_TITLE, WB_CONTENT, WB_STATUS, M_NICKNAME
                FROM WALKBOARD W
                JOIN MEMBER M ON (W.M_CODE = M.M_CODE)
                ORDER BY WB_NO DESC)
    )
WHERE (RNUM BETWEEN 1 AND 3) AND WB_STATUS = 'Y';
